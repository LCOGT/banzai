# Production deployment values for banzai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Automatically manage worker count within the configured limits. More workers
# will be started when the CPU usage rises above the configured threshold.
horizontalPodAutoscaler:
  enabled: true
  minReplicas: 15
  maxReplicas: 15
  targetCPUUtilizationPercentage: 50
  minLargeReplicas: 7
  maxLargeReplicas: 7

image:
  repository: ghcr.io/lcogt/banzai
  tag: "1.18.1"
  pullPolicy: IfNotPresent

# Values for the OCS Ingester library, used by BANZAI.
ingester:
  apiRoot: http://archiveapi-internal.prod/
  s3Bucket: archive-lco-global
  ingesterProcessName: banzai_imaging
  opentsdbHostname: opentsdb.lco.gtn
  opentsdbPort: 80
  postProcessFiles: false
  noMetrics: false
  filestoreType: s3

# Values specific to the BANZAI pipeline
banzai:
  astrometryServiceUrl: http://astrometry.lco.gtn/catalog
  configdbUrl: http://configdb.lco.gtn/sites/
  observationPortalUrl: http://internal-observation-portal.lco.gtn/api/observations/
  useDifferentArchiveSources: false
  calibrateProposalId: calibrate
  banzaiWorkerLogLevel: info
  rawDataApiRoot: http://archiveapi-internal.prod/
  fitsBroker: "amqp://science-archive:science-archive@rabbitmq.prod-rmq-shared.svc:5672/science-archive"
  fitsExchange: archived_fits
  queueName: banzai_pipeline
  celeryTaskQueueName: banzai_imaging
  largeCeleryTaskQueueName: banzai_large_imaging
  PhotometryCatalogURL: http://phot-catalog.lco.gtn/
  openSearchURL: https://opensearch.lco.global/

# CronJob configuration to periodically update instrument table in BANZAI DB
instrumentTableCronjob:
  schedule: "*/5 * * * *"

useDockerizedDatabase: false
useDockerizedRabbitMQ: false

postgresql:
  hostname: prod-postgres1-cluster-writer-pgbouncer.prod-db-proxy.svc.cluster.local
  postgresqlUsername: banzai
  postgresqlDatabase: banzai

rabbitmq:
  hostname: rabbitmq.prod-rmq-shared.svc
  rabbitmq:
    username: banzai
  vhost: banzai

tolerations:
  - key: karpenter.lco.earth/provisioner-name
    operator: Equal
    value: prod

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: karpenter.lco.earth/provisioner-name
            operator: In
            values:
              - prod
