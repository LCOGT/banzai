apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "banzai.fullname" . -}} -workers
  labels:
{{ include "banzai.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "banzai.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: workers
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "banzai.name" . }}
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/component: workers
    spec:
      # After receiving a SIGTERM, give the worker enough time to finish any
      # processing in-progress.
      terminationGracePeriodSeconds: 620
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          command:
            - "celery"
            - "-A"
            - "banzai"
            - "worker"
            - --concurrency=1
            - --prefetch-multiplier=1
            - "-l"
            - "info"
            - "-Q"
            - "$(CELERY_TASK_QUEUE_NAME)"
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: CELERY_ACKS_LATE
              value: "True"
            - name: OMP_NUM_THREADS
              value: "2"
            {{- include "banzai.Env" . | nindent 12 }}
          resources:
            requests:
              cpu: "0.5"
              memory: "4Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
      volumes:
        - name: tmp
          ephemeral:
            volumeClaimTemplate:
              metadata:
                labeles:
                  app.kubernetes.io/name: {{ include "banzai.name" . }}
                  app.kubernetes.io/instance: "{{ .Release.Name }}"
                  app.kubernetes.io/component: workers
              spec:
                accessModes:
                  - "ReadWriteOnce"
                resources:
                  requests:
                    storage: 20Gi
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
