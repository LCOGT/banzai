[build_sphinx]
source-dir = docs
build-dir = docs/_build
all_files = 1

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[upload_docs]
upload-dir = docs/_build/html
show-response = 1

[tool:pytest]
minversion = 3.5
norecursedirs = build docs/_build
doctest_plus = enabled
addopts = -p no:warnings
log_cli = True
log_level = info
log_cli_level = info
markers =
    # E2E test markers
    e2e : End-to-end test suite
    master_bias : Master bias e2e test
    master_dark : Master dark e2e test
    master_flat : Master flat e2e test
    science_files : Science reduction e2e test
    # Unit/integration test markers
    array_utils
    astrometry
    bias_comparer
    bias_level_subtractor
    bias_maker
    bias_subtractor
    bpm
    celery
    crosstalk_corrector
    dark_comparer
    dark_maker
    dark_normalizer
    date_utils
    dbs
    fits_utils
    flat_comparer
    flat_maker
    flat_normalizer
    frames
    gain_normalizer
    header_checker
    image_criteria
    image_utils
    logs
    median_utils
    mosaic_creator
    munge
    need_to_process_image
    observation_utils
    overscan_subtractor
    pattern_noise_qc
    pointing
    quick_select
    runtime_context
    saturation_qc
    saving_qc
    stacking
    stats
    thousands_qc

[pycodestyle]
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E901 - SyntaxError or IndentationError
# E902 - IOError
select = E101,W191,W291,W292,W293,W391,E111,E112,E113,E901,E902
exclude = extern,sphinx,*parsetab.py

[metadata]
# TODO: This no longer works with pypi because on pypi we are lco-banzai.
name = banzai
description = Python data reduction package for LCOGT data
long_description = This is a package to reduce LCOGT raw imaging data.
author = Curtis McCully
author_email = cmccully@lco.global
license = GPLv3
url = http://github.com/lcogt/banzai

edit_on_github = True
github_project = lcogt/banzai

[options]
zip_safe = False
packages = find:
install_requires =
    astropy>=3.0
    scipy
    sqlalchemy>=1.3.0b1
    logutils
    numpy
    cython
    mysql-connector-python
    lcogt_logging==0.3.2
    sep
    kombu==4.4.0
    amqp==2.6.0
    requests
    elasticsearch>=5.0.0,<6.0.0
    pytest>=4.0
    pyyaml
    psycopg2-binary
    celery[redis]==4.3.1
    apscheduler
    python-dateutil
    ocs_ingester>=2.3.0,<3
    tenacity==6.0.0
    python-dateutil
    emcee
    scikit-image
    cosmic-conn>=0.2.8

setup_requires = setuptools_scm
python_requires = >=3.7

[options.extras_require]
test =
    pytest>=4.0
    mock
    coverage
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
banzai.tests = data/*

[options.entry_points]
console_scripts =
    banzai_reduce_individual_frame = banzai.main:reduce_single_frame
    banzai_reduce_multichip_frame = banzai.main:reduce_multichip_frame
    banzai_reduce_directory = banzai.main:reduce_directory
    banzai_make_master_calibrations = banzai.main:make_master_calibrations
    banzai_automate_stack_calibrations = banzai.main:start_stacking_scheduler
    banzai_run_realtime_pipeline = banzai.main:run_realtime_pipeline
    banzai_mark_frame_as_good = banzai.main:mark_frame_as_good
    banzai_mark_frame_as_bad = banzai.main:mark_frame_as_bad
    banzai_update_db = banzai.main:update_db
    banzai_migrate_db = banzai.utils.db_migration:migrate_db
    banzai_add_instrument = banzai.main:add_instrument
    banzai_add_site = banzai.main:add_site
    banzai_add_bpm = banzai.main:add_bpm
    banzai_populate_bpms = banzai.main:add_bpms_from_archive
    banzai_create_db = banzai.main:create_db

[coverage:run]
source = {packagename}
omit =
   {packagename}/_astropy_init*
   {packagename}/conftest*
   {packagename}/cython_version*
   {packagename}/setup_package*
   {packagename}/*/setup_package*
   {packagename}/*/*/setup_package*
   {packagename}/tests/*
   {packagename}/*/tests/*
   {packagename}/*/*/tests/*
   {packagename}/version*

[coverage:report]
exclude_lines =
   # Have to re-enable the standard pragma
   pragma: no cover

   # Don't complain about packages we have installed
   except ImportError

   # Don't complain if tests don't hit assertions
   raise AssertionError
   raise NotImplementedError

   # Don't complain about script hooks
   def main\(.*\):

   # Ignore branches that don't pertain to this version of Python
   pragma: py{ignore_python_version}
