[tox]
envlist =
    py{36,37,38}-test{,-alldeps,-devdeps}{,-cov}
    py{36,37,38}-test-numpy{116,117,118}
    py{36,37,38}-test-astropy{30,40,lts}
    build_docs
    linkcheck
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true
indexserver =
    NIGHTLY = https://pypi.anaconda.org/scipy-wheels-nightly/simple

[testenv]
# Suppress display of matplotlib plots generated during docs build
setenv = MPLBACKEND=agg

# Pass through the following environment variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI TRAVIS

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}/banzai/t

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests

# The following provides some specific pinnings for key packages
deps =
    numpy117: numpy==1.17.4

    astropy30: astropy==3.0.*
    astropy40: astropy==4.0.*
    astropylts: astropy==4.0.*

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test
    alldeps: all

commands =
    pytest
;    pip freeze
;    !cov: pytest --pyargs banzai {toxinidir}/docs {posargs}
;    cov: pytest --pyargs banzai {toxinidir}/docs --cov banzai --cov-config={toxinidir}/setup.cfg {posargs}

;[testenv:build_docs]
;changedir = docs
;description = invoke sphinx-build to build the HTML docs
;extras = docs
;commands =
;    pip freeze
;    sphinx-build -W -b html . _build/html
;
;[testenv:linkcheck]
;changedir = docs
;description = check the links in the HTML docs
;extras = docs
;commands =
;    pip freeze
;    sphinx-build -W -b linkcheck . _build/html
;
;[testenv:codestyle]
;skip_install = true
;changedir = .
;description = check code style, e.g. with flake8
;deps = flake8
;commands = flake8 banzai --count --max-line-length=100
