# Source: rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
spec:
  serviceName: rabbitmq-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: rabbitmq
      app.kubernetes.io/name: rabbitmq
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: rabbitmq
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        app.kubernetes.io/version: 4.1.2
        helm.sh/chart: rabbitmq-16.0.10
      annotations:
        checksum/config: 0595c53d10fdc4fd8b9137b97b454316d493cc16c95ba7f69c3e195143748d5a
        checksum/secret: eb94f7fc40208f996fd885063c3e736c8ef0a55412b315be71a5fc38ef2065d3
    spec:
      serviceAccountName: rabbitmq
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: rabbitmq
                  app.kubernetes.io/name: rabbitmq
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      terminationGracePeriodSeconds: 120
      enableServiceLinks: true
      initContainers:
      - name: prepare-plugins-dir
        image: docker.io/bitnami/rabbitmq:4.1.2-debian-12-r0
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 375m
            ephemeral-storage: 2Gi
            memory: 384Mi
          requests:
            cpu: 250m
            ephemeral-storage: 50Mi
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        command:
        - /bin/bash
        args:
        - -ec
        - |
          #!/bin/bash

          . /opt/bitnami/scripts/liblog.sh

          info "Copying plugins dir to empty dir"
          # In order to not break the possibility of installing custom plugins, we need
          # to make the plugins directory writable, so we need to copy it to an empty dir volume
          cp -r --preserve=mode /opt/bitnami/rabbitmq/plugins/ /emptydir/app-plugins-dir
        volumeMounts:
        - name: empty-dir
          mountPath: /emptydir
      containers:
      - name: rabbitmq
        image: docker.io/bitnami/rabbitmq:4.1.2-debian-12-r0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -ec
              - |
                if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then
                    /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t "120" -d "false"
                else
                    rabbitmqctl stop_app
                fi
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RABBITMQ_FORCE_BOOT
          value: "no"
        - name: RABBITMQ_NODE_NAME
          value: rabbit@$(MY_POD_NAME).rabbitmq-headless.$(MY_POD_NAMESPACE).svc.cluster.local
        - name: RABBITMQ_UPDATE_PASSWORD
          value: "no"
        - name: RABBITMQ_MNESIA_DIR
          value: /opt/bitnami/rabbitmq/.rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)
        - name: RABBITMQ_LDAP_ENABLE
          value: "no"
        - name: RABBITMQ_LOGS
          value: '-'
        - name: RABBITMQ_ULIMIT_NOFILES
          value: "65535"
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_ERL_COOKIE_FILE
          value: /opt/bitnami/rabbitmq/secrets/rabbitmq-erlang-cookie
        - name: RABBITMQ_LOAD_DEFINITIONS
          value: "no"
        - name: RABBITMQ_DEFINITIONS_FILE
          value: /app/load_definition.json
        - name: RABBITMQ_SECURE_PASSWORD
          value: "yes"
        - name: RABBITMQ_USERNAME
          value: rabbitmq
        - name: RABBITMQ_PASSWORD_FILE
          value: /opt/bitnami/rabbitmq/secrets/rabbitmq-password
        - name: RABBITMQ_PLUGINS
          value: rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap
        envFrom: null
        ports:
        - name: amqp
          containerPort: 5672
        - name: dist
          containerPort: 25672
        - name: stats
          containerPort: 15672
        - name: epmd
          containerPort: 4369
        - name: metrics
          containerPort: 9419
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 20
          exec:
            command:
            - /bin/bash
            - -ec
            - curl -f --user rabbitmq:$(< $RABBITMQ_PASSWORD_FILE) 127.0.0.1:15672/api/health/checks/virtual-hosts
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 20
          exec:
            command:
            - /bin/bash
            - -ec
            - curl -f --user rabbitmq:$(< $RABBITMQ_PASSWORD_FILE) 127.0.0.1:15672/api/health/checks/local-alarms
        resources:
          limits:
            cpu: 375m
            ephemeral-storage: 2Gi
            memory: 384Mi
          requests:
            cpu: 250m
            ephemeral-storage: 50Mi
            memory: 256Mi
        volumeMounts:
        - name: configuration
          mountPath: /bitnami/rabbitmq/conf
        - name: empty-dir
          mountPath: /tmp
          subPath: tmp-dir
        - name: empty-dir
          mountPath: /opt/bitnami/rabbitmq/etc/rabbitmq
          subPath: app-conf-dir
        - name: empty-dir
          mountPath: /opt/bitnami/rabbitmq/var/lib/rabbitmq
          subPath: app-tmp-dir
        - name: empty-dir
          mountPath: /opt/bitnami/rabbitmq/.rabbitmq/
          subPath: app-erlang-cookie
        - name: empty-dir
          mountPath: /opt/bitnami/rabbitmq/var/log/rabbitmq
          subPath: app-logs-dir
        - name: empty-dir
          mountPath: /opt/bitnami/rabbitmq/plugins
          subPath: app-plugins-dir
        - name: data
          mountPath: /opt/bitnami/rabbitmq/.rabbitmq/mnesia
        - name: rabbitmq-secrets
          mountPath: /opt/bitnami/rabbitmq/secrets
      volumes:
      - name: empty-dir
        emptyDir: {}
      - name: configuration
        projected:
          sources:
          - secret:
              name: rabbitmq-config
      - name: rabbitmq-secrets
        projected:
          sources:
          - secret:
              name: rabbitmq
          - secret:
              name: rabbitmq
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
      labels:
        app.kubernetes.io/instance: rabbitmq
        app.kubernetes.io/name: rabbitmq
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 512Mi
---
# Source: rabbitmq/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: rabbitmq
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: rabbitmq
      app.kubernetes.io/name: rabbitmq
  policyTypes:
  - Ingress
  - Egress
  egress:
  - {}
  ingress:
  # Allow inbound connections to RabbitMQ
  - ports:
    - port: 4369
    - port: 5672
    - port: 5671
    - port: 25672
    - port: 15672
---
# Source: rabbitmq/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: rabbitmq
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: rabbitmq
      app.kubernetes.io/name: rabbitmq
---
# Source: rabbitmq/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rabbitmq-endpoint-reader
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
# Source: rabbitmq/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rabbitmq-endpoint-reader
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
subjects:
- kind: ServiceAccount
  name: rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rabbitmq-endpoint-reader
---
# Source: rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
type: Opaque
data:
  rabbitmq-password: cmFiYml0bXE=
  rabbitmq-erlang-cookie: eEJwUjAwWmZXUDNhSHkzVVlkZlVKQXFnWjRxOThDUEs=
---
# Source: rabbitmq/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-config
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
type: Opaque
data:
  rabbitmq.conf: IyMgVXNlcm5hbWUgYW5kIHBhc3N3b3JkCmRlZmF1bHRfdXNlciA9IHJhYmJpdG1xCiMjIENsdXN0ZXJpbmcKIyMKY2x1c3Rlcl9uYW1lID0gcmFiYml0bXEKY2x1c3Rlcl9mb3JtYXRpb24ucGVlcl9kaXNjb3ZlcnlfYmFja2VuZCAgPSByYWJiaXRfcGVlcl9kaXNjb3ZlcnlfazhzCmNsdXN0ZXJfZm9ybWF0aW9uLms4cy5ob3N0ID0ga3ViZXJuZXRlcy5kZWZhdWx0CmNsdXN0ZXJfZm9ybWF0aW9uLms4cy5hZGRyZXNzX3R5cGUgPSBob3N0bmFtZQpjbHVzdGVyX2Zvcm1hdGlvbi5rOHMuc2VydmljZV9uYW1lID0gcmFiYml0bXEtaGVhZGxlc3MKY2x1c3Rlcl9mb3JtYXRpb24uazhzLmhvc3RuYW1lX3N1ZmZpeCA9IC5yYWJiaXRtcS1oZWFkbGVzcy5iYW56YWktZGVwcy5zdmMuY2x1c3Rlci5sb2NhbApjbHVzdGVyX2Zvcm1hdGlvbi5ub2RlX2NsZWFudXAuaW50ZXJ2YWwgPSAxMApjbHVzdGVyX2Zvcm1hdGlvbi5ub2RlX2NsZWFudXAub25seV9sb2dfd2FybmluZyA9IHRydWUKY2x1c3Rlcl9wYXJ0aXRpb25faGFuZGxpbmcgPSBhdXRvaGVhbAoKIyBxdWV1ZSBtYXN0ZXIgbG9jYXRvcgpxdWV1ZV9tYXN0ZXJfbG9jYXRvciA9IG1pbi1tYXN0ZXJzCiMgZW5hYmxlIGxvb3BiYWNrIHVzZXIKbG9vcGJhY2tfdXNlcnMucmFiYml0bXEgPSBmYWxzZQojZGVmYXVsdF92aG9zdCA9IGJhbnphaS1kZXBzLXZob3N0CiNkaXNrX2ZyZWVfbGltaXQuYWJzb2x1dGUgPSA1ME1CCiMjIFByb21ldGhldXMgbWV0cmljcwojIwpwcm9tZXRoZXVzLnRjcC5wb3J0ID0gOTQxOQojIyBUQ1AgTGlzdGVuIE9wdGlvbnMKIyMKdGNwX2xpc3Rlbl9vcHRpb25zLmJhY2tsb2cgPSAxMjgKdGNwX2xpc3Rlbl9vcHRpb25zLm5vZGVsYXkgPSB0cnVlCnRjcF9saXN0ZW5fb3B0aW9ucy5saW5nZXIub24gICAgICA9IHRydWUKdGNwX2xpc3Rlbl9vcHRpb25zLmxpbmdlci50aW1lb3V0ID0gMAp0Y3BfbGlzdGVuX29wdGlvbnMua2VlcGFsaXZlID0gZmFsc2U=
---
# Source: rabbitmq/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: amqp
    port: 5672
    targetPort: amqp
    nodePort: null
  - name: epmd
    port: 4369
    targetPort: epmd
    nodePort: null
  - name: dist
    port: 25672
    targetPort: dist
    nodePort: null
  - name: http-stats
    port: 15672
    targetPort: stats
    nodePort: null
  selector:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/name: rabbitmq
---
# Source: rabbitmq/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
spec:
  clusterIP: None
  ports:
  - name: epmd
    port: 4369
    targetPort: epmd
  - name: amqp
    port: 5672
    targetPort: amqp
  - name: dist
    port: 25672
    targetPort: dist
  - name: http-stats
    port: 15672
    targetPort: stats
  selector:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/name: rabbitmq
  publishNotReadyAddresses: true
---
# Source: rabbitmq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq
  namespace: banzai-deps
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/version: 4.1.2
    helm.sh/chart: rabbitmq-16.0.10
automountServiceAccountToken: false
secrets:
- name: rabbitmq
