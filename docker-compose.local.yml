services:
  redis:
    image: redis:7
    container_name: banzai-redis-local
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: banzai-rabbitmq-local
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped

  banzai-worker:
    build: .
    container_name: banzai-worker-local
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - ${HOST_DATA_DIR}:/data
      - ${HOST_PROCESSED_DIR}:/output
    environment:
      - TASK_HOST=${TASK_HOST}
      - FITS_BROKER=${FITS_BROKER}
      - FITS_EXCHANGE=${FITS_EXCHANGE}
      - CELERY_TASK_QUEUE_NAME=${CELERY_TASK_QUEUE_NAME}
      - BANZAI_WORKER_LOGLEVEL=${BANZAI_WORKER_LOGLEVEL}
      - OMP_NUM_THREADS=${OMP_NUM_THREADS}
      - OPENTSDB_PYTHON_METRICS_TEST_MODE=${OPENTSDB_PYTHON_METRICS_TEST_MODE}
      - API_ROOT=${API_ROOT}
      - AUTH_TOKEN=${AUTH_TOKEN}
      - DATA_ROOT=/output
    command: ["celery", "-A", "banzai", "worker", "--hostname", "banzai-worker-local", "-l", "${BANZAI_WORKER_LOGLEVEL}", "-c", "4", "-Q", "${CELERY_TASK_QUEUE_NAME}"]
    restart: unless-stopped

  banzai-large-worker:
    build: .
    container_name: banzai-large-worker-local
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - ${HOST_DATA_DIR}:/data
      - ${HOST_PROCESSED_DIR}:/output
    environment:
      - TASK_HOST=${TASK_HOST}
      - FITS_BROKER=${FITS_BROKER}
      - FITS_EXCHANGE=${FITS_EXCHANGE}
      - CELERY_LARGE_TASK_QUEUE_NAME=${CELERY_LARGE_TASK_QUEUE_NAME}
      - BANZAI_WORKER_LOGLEVEL=${BANZAI_WORKER_LOGLEVEL}
      - OMP_NUM_THREADS=${OMP_NUM_THREADS}
      - OPENTSDB_PYTHON_METRICS_TEST_MODE=${OPENTSDB_PYTHON_METRICS_TEST_MODE}
      - API_ROOT=${API_ROOT}
      - AUTH_TOKEN=${AUTH_TOKEN}
      - DATA_ROOT=/output
    command: ["celery", "-A", "banzai", "worker", "--hostname", "banzai-large-worker-local", "-l", "${BANZAI_WORKER_LOGLEVEL}", "-c", "4", "-Q", "${CELERY_LARGE_TASK_QUEUE_NAME}"]
    restart: unless-stopped

  banzai-listener:
    build: .
    container_name: banzai-listener-local
    depends_on:
      - redis
      - rabbitmq
      - banzai-worker
    volumes:
      - ${HOST_DATA_DIR}:/data
      - ${HOST_PROCESSED_DIR}:/output
    environment:
      - DB_ADDRESS=${DB_ADDRESS}
      - CAL_DB_ADDRESS=${CAL_DB_ADDRESS:-${DB_ADDRESS}}
      - API_ROOT=${API_ROOT}
      - AUTH_TOKEN=${AUTH_TOKEN}
      - BANZAI_WORKER_LOGLEVEL=${BANZAI_WORKER_LOGLEVEL}
      - CELERY_LARGE_TASK_QUEUE_NAME=${CELERY_LARGE_TASK_QUEUE_NAME}
      - CELERY_TASK_QUEUE_NAME=${CELERY_TASK_QUEUE_NAME}
      - TASK_HOST=${TASK_HOST}
      - FITS_BROKER_URL=${FITS_BROKER_URL}
      - FITS_EXCHANGE=${FITS_EXCHANGE}
      - OPENTSDB_PYTHON_METRICS_TEST_MODE=${OPENTSDB_PYTHON_METRICS_TEST_MODE}
    entrypoint: ["banzai_run_realtime_pipeline", "--fpack", "--no-bpm",
                 "--broker-url=${FITS_BROKER_URL}",
                 "--db-address=${DB_ADDRESS}",
                 "--calibration-db-address=${CAL_DB_ADDRESS}",
                 "--processed-path=/data/output"]
    restart: unless-stopped
