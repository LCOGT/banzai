[build-system]

requires = ["setuptools",
            "setuptools_scm",
            "wheel",
            "extension-helpers",
            "oldest-supported-numpy",
            "cython>=0.29.23,<3.0.0"]

build-backend = 'setuptools.build_meta'

[project]
name = "lco-banzai"
version = "1.20.2"
description = "Python data reduction package for LCOGT data"
authors = [
  { name="Curtis McCully", email="cmccully@lco.global" },
]
license = {text="GPL-3.0-or-later"}
readme = "README.rst"
keywords = ["astronomy", "reduction", "LCOGT"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent"
]
dependencies = [
  "astropy>=4.0",
  "scipy",
  "sqlalchemy>=1.3.0b1",
  "logutils",
  "numpy>=1.24",
  "cython",
  "lcogt_logging",
  "photutils",
  "bottleneck",
  "kombu",
  "amqp",
  "requests",
  "opensearch-py>=1",
  "pytest>=4.0",
  "pyyaml",
  "psycopg2-binary",
  "celery[redis]>5",
  "apscheduler",
  "ocs_ingester>=3.0.4,<4.0.0",
  "tenacity>=8.5",
  "python-dateutil",
  "emcee",
  "scikit-image",
  "cosmic-conn>=0.2.8",
  "alembic"
]

[project.optional-dependencies]
test = [
    "pytest>=4.0",
    "mock",
    "coverage",
    "pytest-astropy"
]
docs = [
    "sphinx-astropy"
]

[project.urls]
"Source" = "https://github.com/lcogt/banzai"
"Docs" = "https://banzai.readthedocs.io/en/latest/"

[tool.setuptools.packages.find]
include = ["banzai*"]

[tool.pycodestyle]
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E901 - SyntaxError or IndentationError
# E902 - IOError
select = [
  "E101", "W191", "W291", "W292", "W293", "W391", "E111", "E112", "E113", "E901", "E902"
]
exclude = ["extern", "sphinx", "*parsetab.py"]

[tool.setuptools]
zip-safe = false

[tool.setuptools.package-data]
"banzai.tests" = ["data/*"]

[project.scripts]
    banzai_reduce_individual_frame = "banzai.main:reduce_single_frame"
    banzai_reduce_directory = "banzai.main:reduce_directory"
    banzai_make_master_calibrations = "banzai.main:make_master_calibrations"
    banzai_automate_stack_calibrations = "banzai.main:start_stacking_scheduler"
    banzai_run_realtime_pipeline = "banzai.main:run_realtime_pipeline"
    banzai_mark_frame_as_good = "banzai.main:mark_frame_as_good"
    banzai_mark_frame_as_bad = "banzai.main:mark_frame_as_bad"
    banzai_update_db = "banzai.main:update_db"
    banzai_add_instrument = "banzai.main:add_instrument"
    banzai_add_site = "banzai.main:add_site"
    banzai_add_super_calibration = "banzai.main:add_super_calibration"
    banzai_populate_bpms = "banzai.main:add_bpms_from_archive"
    banzai_create_db = "banzai.main:create_db"

[tool.coverage.run]
source = ["banzai"] 
omit = [
  "banzai/_astropy_init*",
  "banzai/conftest*",
  "banzai/cython_version*",
  "banzai/setup_package*",
  "banzai/*/setup_package*",
  "banzai/*/*/setup_package*",
  "banzai/tests/*",
  "banzai/*/tests/*",
  "banzai/*/*/tests/*",
  "banzai/version*"
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "except ImportError",
  "raise AssertionError",
  "raise NotImplementedError",
  "def main\\(.*\\):",
  "pragma: py{ignore_python_version}"
]
